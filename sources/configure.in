client Process this file with autoconf to produce a configure script.
AC_INIT(BeStMan, 2.2, sdmsupport@lbl.gov)

AC_COPYRIGHT(BeStMan Copyright 2011 the Regents of the University Of California through Lawrence Berkeley National Laboratory. http://sdm.lbl.gov/bestman/)


HOST=`/bin/uname -n`
ptmp=`pwd 2>&1`
MYDATE=`date`
MYHOST=`hostname -f`
TOP=`/bin/pwd`

AC_PREFIX_DEFAULT([`pwd`/dist])
if test "x$prefix" = "xNONE"; then
  prefix=$ac_default_prefix
  ac_configure_args="$ac_configure_args --prefix $prefix"
fi
echo "DEFAULT_PREFIX=$prefix"

VERBOSE=">>"
AC_ARG_ENABLE(verbose,
[  --enable-verbose                Print output to the standard output],
VERBOSE="| tee -a")

AC_ARG_ENABLE(cleanup,
[  --enable-cleanbuild  (default=yes)    Enable clean-up of previous build],
CLEANUP=$enableval,
)

Ver_separator ()
{
	var1=$1
	if test ! "$var1" ; then
		var1=0
	fi
	var2=$2
	if test ! "$var2" ; then
		var2=0
	fi
	var3=$3
	if test ! "$var3" ; then
		var3=0
	fi
}

Ver_getter ()
{
	varget=$1
	varget=`echo $varget | sed 's/\./ /g'`
}



my_JAVA_HOME
my_ANT_HOME
my_CHECK_VER_JAVA

dnl CLASSPATH to include all dependent libs to build bestman2
MYCLASSPATH=`echo $CLASSPATH`

dnl axis_1.4 related libs
AXIS="axis"
AXISVERSION="1.4"
COMMONSDISCOVERY="commons-discovery"
CDVERSION="0.2"
COMMONSLOGGING="commons-logging"
CLVERSION="1.1"
JAXRPC="jaxrpc"
JRVERSION="axis_1.4"
WSDL4J="wsdl4j"
WJVERSION="1.6.2"
XERCES="xercesImpl"
XCVERSION="2.11.0"
XMLAPIS="xml-apis"
XAVERSION="2.11.0"

my_JAR_VALIDATOR($MYCLASSPATH, $AXIS, $AXISVERSION, AXISNAME, AXISPATH, AXISDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $COMMONSDISCOVERY, $CDVERSION, CDNAME, CDPATH, CDDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $COMMONSLOGGING, $CLVERSION, CLNAME, CLPATH, CLDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JAXRPC, $JRVERSION, JRNAME, JRPATH, JRDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $WSDL4J, $WJVERSION, WJNAME, WJPATH, WJDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $XERCES, $XCVERSION, XCNAME, XCPATH, XCDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $XMLAPIS, $XAVERSION, XANAME, XAPATH, XADIR)

dnl GUMS2-XACML related libs
COMMONSCOLLECTIONS="commons-collections"
COMMCVERSION="3.2.1"
COMMONSLANG="commons-lang"
COMMLVERSION="2.6"
ESAPI="esapi"
ESAPIVERSION="2.0.1"
JODATIME="joda-time"
JTVERSION="1.6.2"
OPENSAML="opensaml"
OPENSVERSION="2.5.2"
OPENWS="openws"
OPENWVERSION="1.4.3"
PRIVILEGE="privilege-xacml"
PRVERSION="2.2.5"
GLITET="glite-security-trustmanager"
GLITETVERSION="2.5.5"
GLITEU="glite-security-util-java"
GLITEUVERSION="2.8.0"
VELOCITY="velocity"
VLVERSION="1.7"
XALAN="xalan"
XLVERSION="2.7.1"
XMLSEC="xmlsec"
XSVERSION="1.4.5"
XMLTOOLING="xmltooling"
XTVERSION="1.3.3"

my_JAR_VALIDATOR($MYCLASSPATH, $COMMONSCOLLECTIONS, $COMMCVERSION, COMMCNAME, COMMCPATH, COMMCDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $COMMONSLANG, $COMMLVERSION, COMMLNAME, COMMLPATH, COMMLDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $ESAPI, $ESAPIVERSION, ESAPINAME, ESAPIPATH, ESAPIDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JODATIME, $JTVERSION, JTNAME, JTPATH, JTDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $OPENSAML, $OPENSVERSION, OPENSNAME, OPENSPATH, OPENSDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $OPENWS, $OPENWVERSION, OPENWNAME, OPENWPATH, OPENWDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $PRIVILEGE, $PRVERSION, PRNAME, PRPATH, PRDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $GLITET, $GLITETVERSION, GLITETNAME, GLITETPATH, GLITETDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $GLITEU, $GLITEUVERSION, GLITEUNAME, GLITEUPATH, GLITEUDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $VELOCITY, $VLVERSION, VLNAME, VLPATH, VLDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $XALAN, $XLVERSION, XLNAME, XLPATH, XLDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $XMLSEC, $XSVERSION, XSNAME, XSPATH, XSDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $XMLTOOLING, $XTVERSION, XTNAME, XTPATH, XTDIR)

dnl jetty related libs
JETTYCLIENT="jetty-client"
JETTYCONTINUATION="jetty-continuation"
JETTYDEPLOY="jetty-deploy"
JETTYHTTP="jetty-http"
JETTYIO="jetty-io"
JETTYSECURITY="jetty-security"
JETTYSERVER="jetty-server"
JETTYSERVLET="jetty-servlet"
JETTYUTIL="jetty-util"
JETTYWEBAPP="jetty-webapp"
JETTYXML="jetty-xml"
JETTYVERSION="8.0.1.v20110908"

my_JAR_VALIDATOR($MYCLASSPATH, $JETTYCLIENT, $JETTYVERSION, JCNAME, JCPATH, JCDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYCONTINUATION, $JETTYVERSION, JNNAME, JNPATH, JNDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYDEPLOY, $JETTYVERSION, JDNAME, JDPATH, JDDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYHTTP, $JETTYVERSION, JHNAME, JHPATH, JHDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYIO, $JETTYVERSION, JINAME, JIPATH, JIDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYSECURITY, $JETTYVERSION, JSCNAME, JSCPATH, JSCDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYSERVER, $JETTYVERSION, JSVNAME, JSVPATH, JSVDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYSERVLET, $JETTYVERSION, JSLNAME, JSLPATH, JSLDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYUTIL, $JETTYVERSION, JUNAME, JUPATH, JUDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYWEBAPP, $JETTYVERSION, JWNAME, JWPATH, JWDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JETTYXML, $JETTYVERSION, JXNAME, JXPATH, JXDIR)

dnl jetty related libs
JGLOBUSAXIS="cog-jglobus-axis"
JGLOBUSGRIDFTP="gridftp"
JGLOBUSGSS="gss"
JGLOBUSIO="io"
JGLOBUSJSSE="jsse"
JGLOBUSSSLPROXIES="ssl-proxies"
JGVERSION="2.0.4"
LOG4J="log4j"
LOG4JVERSION="1.2.15"

my_JAR_VALIDATOR($MYCLASSPATH, $JGLOBUSAXIS, $JGVERSION, JGANAME, JGAPATH, JGADIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JGLOBUSGRIDFTP, $JGVERSION, JGGNAME, JGGPATH, JGGDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JGLOBUSGSS, $JGVERSION, JGSNAME, JGSPATH, JGSDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JGLOBUSIO, $JGVERSION, JGINAME, JGIPATH, JGIDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JGLOBUSJSSE, $JGVERSION, JGJNAME, JGJPATH, JGJDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JGLOBUSSSLPROXIES, $JGVERSION, JGPNAME, JGPPATH, JGPDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $LOG4J, $LOG4JVERSION, LOG4JNAME, LOG4JPATH, LOG4JDIR)

dnl voms related libs
BCPROV="bcprov-jdk15"
BPVERSION="1.4.6"
VOMSJAPI="vomsjapi"
VJVERSION="2.0.6"

my_JAR_VALIDATOR($MYCLASSPATH, $BCPROV, $BPVERSION, BPNAME, BPPATH, BPDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $VOMSJAPI, $VJVERSION, VJNAME, VJPATH, VJDIR)

dnl other libs
JCLOSLF4J="jcl-over-slf4j"
JSVERSION="146"
BERKELEYDB="je-4.1.10"
BDBVERSION="4.1.10"
SERVLETAPI="servlet-api"
SAVERSION="3.0"
SLF4JAPI="slf4j-api"
SLF4JLOG4J12="slf4j-log4j12"
SLF4JSIMPLE="slf4j-simple"
SLF4JVERSION="1.6.2"
WHICH4J="which4j"
W4VERSION="0.21"
JSONSIMPLE="json-simple"
JSONVERSION="1.1.1" 

my_JAR_VALIDATOR($MYCLASSPATH, $JCLOSLF4J, $JSVERSION, JSNAME, JSPATH, JSDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $BERKELEYDB, $BDBVERSION, BDBNAME, BDBPATH, BDBDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $SERVLETAPI, $SAVERSION, SANAME, SAPATH, SADIR)
my_JAR_VALIDATOR($MYCLASSPATH, $SLF4JAPI, $SLF4JVERSION, S4ANAME, S4APATH, S4ADIR)
my_JAR_VALIDATOR($MYCLASSPATH, $SLF4JLOG4J12, $SLF4JVERSION, S4LNAME, S4LPATH, S4LDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $SLF4JSIMPLE, $SLF4JVERSION, S4SNAME, S4SPATH, S4SDIR)
my_JAR_VALIDATOR($MYCLASSPATH, $WHICH4J, $W4VERSION, W4NAME, W4PATH, W4DIR)
my_JAR_VALIDATOR($MYCLASSPATH, $JSONSIMPLE, $JSONVERSION, JSONNAME, JSONPATH, JSONDIR)

AC_MSG_RESULT([PASSED: AXIS for version $AXISVERSION is found in $AXISPATH.])
AC_MSG_RESULT([PASSED: COMMONS-DISCOVERY for version $CDVERSION is found in $CDPATH.])
AC_MSG_RESULT([PASSED: COMMONS-LOGGING for version $CLVERSION is found in $CLPATH.])
AC_MSG_RESULT([PASSED: JAXRPC for version $JRVERSION is found in $JRPATH.])
AC_MSG_RESULT([PASSED: WSDL4J for version $WJVERSION is found in $WJPATH.])
AC_MSG_RESULT([PASSED: XERCES for version $XCVERSION is found in $XCPATH.])
AC_MSG_RESULT([PASSED: COMMONS-COLLECTIONS for version $COMMCVERSION is found in $COMMCPATH.])
AC_MSG_RESULT([PASSED: COMMONS-LANG3 for version $COMMLVERSION is found in $COMMLPATH.])
AC_MSG_RESULT([PASSED: ESAPI for version $ESAPIVERSION is found in $ESAPIPATH.])
AC_MSG_RESULT([PASSED: JODA-TIME for version $JTVERSION is found in $JTPATH.])
AC_MSG_RESULT([PASSED: OPENSAML for version $OPENSVERSION is found in $OPENSPATH.])
AC_MSG_RESULT([PASSED: OPENWS for version $OPENWVERSION is found in $OPENWPATH.])
AC_MSG_RESULT([PASSED: PRIVILEGE-XACML for version $PRVERSION is found in $PRPATH.])
AC_MSG_RESULT([PASSED: GLITE-SECURITY-TRUSTMANAGER for version $GLITETVERSION is found in $GLITETPATH.])
AC_MSG_RESULT([PASSED: GLITE-SECURITY-UTIL-JAVA for version $GLITEUVERSION is found in $GLITEUPATH.])
AC_MSG_RESULT([PASSED: VELOCITY for version $VLVERSION is found in $VLPATH.])
AC_MSG_RESULT([PASSED: XALAN for version $XLVERSION is found in $XLPATH.])
AC_MSG_RESULT([PASSED: XML-APIS for version $XAVERSION is found in $XAPATH.])
AC_MSG_RESULT([PASSED: XMLSEC for version $XSVERSION is found in $XSPATH.])
AC_MSG_RESULT([PASSED: XMLTOOLIONG for version $XTVERSION is found in $XTPATH.])
AC_MSG_RESULT([PASSED: JETTY-CLIENT for version $JETTYVERSION is found in $JCPATH.])
AC_MSG_RESULT([PASSED: JETTY-CONTINUATION for version $JETTYVERSION is found in $JNPATH.])
AC_MSG_RESULT([PASSED: JETTY-DEPLOY for version $JETTYVERSION is found in $JDPATH.])
AC_MSG_RESULT([PASSED: JETTY-HTTP for version $JETTYVERSION is found in $JHPATH.])
AC_MSG_RESULT([PASSED: JETTY-IO for version $JETTYVERSION is found in $JIPATH.])
AC_MSG_RESULT([PASSED: JETTY-SECURITY for version $JETTYVERSION is found in $JSCPATH.])
AC_MSG_RESULT([PASSED: JETTY-SERVER for version $JETTYVERSION is found in $JSVPATH.])
AC_MSG_RESULT([PASSED: JETTY-SERVLET for version $JETTYVERSION is found in $JSLPATH.])
AC_MSG_RESULT([PASSED: JETTY-UTIL for version $JETTYVERSION is found in $JUPATH.])
AC_MSG_RESULT([PASSED: JETTY-WEBAPP for version $JETTYVERSION is found in $JWPATH.])
AC_MSG_RESULT([PASSED: JETTY-XML for version $JETTYVERSION is found in $JXPATH.])
AC_MSG_RESULT([PASSED: COG-JGLOBUS-AXIS for version $JGVERSION is found in $JGAPATH.])
AC_MSG_RESULT([PASSED: GRIDFTP for version $JGVERSION is found in $JGGPATH.])
AC_MSG_RESULT([PASSED: GSS for version $JGVERSION is found in $JGSPATH.])
AC_MSG_RESULT([PASSED: IO for version $JGVERSION is found in $JGIPATH.])
AC_MSG_RESULT([PASSED: JSSE for version $JGVERSION is found in $JGJPATH.])
AC_MSG_RESULT([PASSED: SSL-PROXIES for version $JGVERSION is found in $JGPPATH.])
AC_MSG_RESULT([PASSED: LOG4J for version $LOG4JVERSION is found in $LOG4JPATH.])
AC_MSG_RESULT([PASSED: BOUNCY-CASTLE-CRYPTO-JDK15 for version $BPVERSION is found in $BPPATH.])
AC_MSG_RESULT([PASSED: VOMSJAPI for version $VJVERSION is found in $VJPATH.])
AC_MSG_RESULT([PASSED: JCL-OVER-SLF4J for version $JSVERSION is found in $JSPATH.])
AC_MSG_RESULT([PASSED: BERKELEY-DB for version $BDBVERSION is found in $BDBPATH.])
AC_MSG_RESULT([PASSED: SERVLET-API for version $SAVERSION is found in $SAPATH.])
AC_MSG_RESULT([PASSED: SLF4J-API for version $SLF4JVERSION is found in $S4APATH.])
AC_MSG_RESULT([PASSED: SLF4J-LOG4J12 for version $SLF4JVERSION is found in $S4LPATH.])
AC_MSG_RESULT([PASSED: SLF4J-SIMPLE for version $SLF4JVERSION is found in $S4SPATH.])
AC_MSG_RESULT([PASSED: WHICH4J for version $W4VERSION is found in $W4PATH.])
AC_MSG_RESULT([PASSED: JSONSIMPLE for version $JSONVERSION is found in $JSONPATH.])

echo "#" > build.properties
echo "# *** Copyright Notice ***" >> build.properties
echo "#" >> build.properties
echo "# BeStMan Copyright (c) 2010-2011, The Regents of the University of California, " >> build.properties
echo "# through Lawrence Berkeley National Laboratory (subject to receipt of any " >> build.properties
echo "# required approvals from the U.S. Dept. of Energy).  This software was " >> build.properties
echo "# developed under funding from the U.S. Department of Energy and is " >> build.properties
echo "# associated with the Berkeley Lab Scientific Data Management Group projects." >> build.properties
echo "# All rights reserved." >> build.properties
echo "# " >> build.properties
echo "# If you have questions about your rights to use or distribute this software, " >> build.properties
echo "# please contact Berkeley Lab's Technology Transfer Department at TTD@lbl.gov." >> build.properties
echo "# " >> build.properties
echo "# NOTICE.  This software was developed under funding from the " >> build.properties
echo "# U.S. Department of Energy.  As such, the U.S. Government has been granted " >> build.properties
echo "# for itself and others acting on its behalf a paid-up, nonexclusive, " >> build.properties
echo "# irrevocable, worldwide license in the Software to reproduce, prepare " >> build.properties
echo "# derivative works, and perform publicly and display publicly.  " >> build.properties
echo "# Beginning five (5) years after the date permission to assert copyright is " >> build.properties
echo "# obtained from the U.S. Department of Energy, and subject to any subsequent " >> build.properties
echo "# five (5) year renewals, the U.S. Government is granted for itself and others" >> build.properties
echo "# acting on its behalf a paid-up, nonexclusive, irrevocable, worldwide license" >> build.properties
echo "# in the Software to reproduce, prepare derivative works, distribute copies to" >> build.properties
echo "# the public, perform publicly and display publicly, and to permit others to" >> build.properties
echo "# do so." >> build.properties
echo "#" >> build.properties
echo "# Scientific Data Management Research Group" >> build.properties
echo "# Lawrence Berkeley National Laboratory" >> build.properties
echo "# http://sdm.lbl.gov/bestman" >> build.properties
echo "#" >> build.properties
echo "#####################################################" >> build.properties
echo "javac.path=$JAVA_HOME/bin/javac" >> build.properties
echo "#####################################################" >> build.properties
echo "axis.path=$AXISPATH" >> build.properties
echo "commons-discovery.path=$CDPATH" >> build.properties
echo "commons-logging.path=$CLPATH" >> build.properties
echo "jaxrpc.path=$JRPATH" >> build.properties
echo "wsdl4j.path=$WJPATH" >> build.properties
echo "xercesImpl.path=$XCPATH" >> build.properties
echo "xml-apis.path=$XAPATH" >> build.properties
echo "#####################################################" >> build.properties
echo "commons-collections.path=$COMMCPATH" >> build.properties
echo "commons-lang.path=$COMMLPATH" >> build.properties
echo "esapi.path=$ESAPIPATH" >> build.properties
echo "joda-time.path=$JTPATH" >> build.properties
echo "opensaml.path=$OPENSPATH" >> build.properties
echo "openws.path=$OPENWPATH" >> build.properties
echo "privilege-xacml.path=$PRPATH" >> build.properties
echo "glite-security-trustmanager.path=$GLITETPATH" >> build.properties
echo "glite-security-util-java.path=$GLITEUPATH" >> build.properties
echo "velocity.path=$VLPATH" >> build.properties
echo "xalan.path=$XLPATH" >> build.properties
echo "xmlsec.path=$XSPATH" >> build.properties
echo "xmltooling.path=$XTPATH" >> build.properties
echo "#####################################################" >> build.properties
echo "jetty-client.path=$JCPATH" >> build.properties
echo "jetty-continuation.path=$JNPATH" >> build.properties
echo "jetty-deploy.path=$JDPATH" >> build.properties
echo "jetty-http.path=$JHPATH" >> build.properties
echo "jetty-io.path=$JIPATH" >> build.properties
echo "jetty-security.path=$JSCPATH" >> build.properties
echo "jetty-server.path=$JSVPATH" >> build.properties
echo "jetty-servlet.path=$JSLPATH" >> build.properties
echo "jetty-util.path=$JUPATH" >> build.properties
echo "jetty-webapp.path=$JWPATH" >> build.properties
echo "jetty-xml.path=$JXPATH" >> build.properties
echo "#####################################################" >> build.properties
echo "cog-axis.path=$JGAPATH" >> build.properties
echo "jglobus-gridftp.path=$JGGPATH" >> build.properties
echo "jglobus-gss.path=$JGSPATH" >> build.properties
echo "jglobus-io.path=$JGIPATH" >> build.properties
echo "jglobus-jsse.path=$JGJPATH" >> build.properties
echo "log4j.path=$LOG4JPATH" >> build.properties
echo "jglobus-ssl-proxies.path=$JGPPATH" >> build.properties
echo "#####################################################" >> build.properties
echo "bcprov-jdk15.path=$BPPATH" >> build.properties
echo "vomsjapi.path=$VJPATH" >> build.properties
echo "#####################################################" >> build.properties
echo "jcl-over-slf4j.path=$JSPATH" >> build.properties
echo "je-4.1.10.path=$BDBPATH" >> build.properties
echo "servlet-api.path=$SAPATH" >> build.properties
echo "slf4j-api.path=$S4APATH" >> build.properties
echo "slf4j-log4j.path=$S4LPATH" >> build.properties
echo "slf4j-simple.path=$S4SPATH" >> build.properties
echo "which4j.path=$W4PATH" >> build.properties
echo "json-simple.path=$JSONPATH" >> build.properties
echo "#####################################################" >> build.properties
echo "bestmansrc.root=$ptmp" >> build.properties
echo "install.root=${prefix}" >> build.properties

eval "cp -f build.properties ./client"
eval "cp -f build.properties ./wsdl"
eval "cp -f build.properties ./server"
eval "cp -f build.properties ./tester"
dnl eval "cp -f build.properties ./setup"

echo "Configuration for BeStMan completed."
echo "Run ant to build and package your build..."

